spring.datasource.url=jdbc:postgresql://localhost:5432/hb
spring.datasource.username=postgres
spring.datasource.password=postgres
#logging.level.root=DEBUG
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
spring.view.view-names:jsp/*
#spring.thymeleaf.view-names:thymeleaf/*
spring.thymeleaf.excluded-view-names=jsp/*,index
tradeWindowSeconds=10


#Queries used fot stats collection
updateKillerName=update "Kills" set "KillerName" = :actualName where "KillerName" = :wrongName;
updateVictimName=update "Kills" set "VictimName" = :actualName where "VictimName" = :wrongName;
updatePlayerName=update "PlayerMatches" set playerColumn = :actualName where playerColumn = :wrongName;
seasonKd=select k.killerName as name, k.kills, v.deaths, Cast(k.kills as float)/v.deaths as "kd" from( select count(*) as kills, killer_name as killerName from kills inner join rounds on kills.round_id=rounds.round_id  inner join matches on matches.match_id=rounds.match_id where matches.season=:season  group by killer_name) as k join ( select count(*) as deaths, victim_name as victimName from kills inner join rounds on kills.round_id=rounds.round_id  inner join matches on matches.match_id=rounds.match_id where matches.season=:season group by victim_name) as v on k.KillerName = v.victimName order by "kd" desc, k.kills desc;
totalKd=select k.killerName as name, k.kills, v.deaths, Cast(k.kills as float)/v.deaths as "kd" from( select count(*) as kills, killer_name as killerName from kills  group by killer_name) as k join ( select count(*) as deaths, victim_name as victimName from kills group by victim_name) as v on k.KillerName = v.victimName order by "kd" desc, k.kills desc;
seasonNemesis=select count(*), kills.killer_name, kills.victim_name from kills inner join rounds on kills.round_id=rounds.round_id  inner join matches on matches.match_id=rounds.match_id where matches.season=:season group by killer_name, victim_name order by count desc;
totalNemesis=select count(*), kills.killer_name, kills.victim_name from kills group by killer_name, victim_name order by count desc;
seasonHeadshotPercentage=select hs.name, (cast(hs.headshots as float)/total.kills)*100 as "headshotPercentage", total.kills, hs."headshots" from ( select count(*) as kills, kills.killer_name as name from kills inner join rounds on kills.round_id=rounds.round_id  inner join matches on matches.match_id=rounds.match_id where matches.season=:season group by killer_name ) as total join ( select count(*) as headshots, kills.killer_name as name, kills.headshot from kills inner join rounds on kills.round_id=rounds.round_id  inner join matches on matches.match_id=rounds.match_id where matches.season=:season and headshot = 'Yes' group by killer_name, headshot) as hs on total.name = hs.name order by "headshotPercentage" desc;
totalHeadshotPercentage=select hs.name, (cast(hs.headshots as float)/total.kills)*100 as "headshotPercentage", total.kills, hs."headshots" from ( select count(*) as kills, kills.killer_name as name from kills group by killer_name ) as total join ( select count(*) as headshots, kills.killer_name as name, kills.headshot from kills where headshot = 'Yes' group by killer_name, headshot) as hs on total.name = hs.name order by "headshotPercentage" desc;
seasonRoundsPlayed=select player,sum(rounds_in_match) as value from (select killer_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id  group by killer_name,match_id union  select victim_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by victim_name,match_id) as player_matches inner join (select count(rounds.round_id) as rounds_in_match, rounds.match_id as match_id from rounds inner join matches on rounds.match_id=matches.match_id where season=:season group by rounds.match_id) as match_rounds on match_rounds.match_id=player_matches.match_id group by player
totalRoundsPlayed=select player,sum(rounds_in_match) as value from (select killer_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id  group by killer_name,match_id union  select victim_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by victim_name,match_id) as player_matches inner join (select count(rounds.round_id) as rounds_in_match, rounds.match_id as match_id from rounds group by rounds.match_id) as match_rounds on match_rounds.match_id=player_matches.match_id group by player
seasonKostRounds=select player,count(kost_rounds.round_id) as value from (select killer_name as player,round_id from kills group by killer_name,round_id union select victim_name as player,round_id from kills k where exists (select victim_name from kills v where victim_name=k.killer_name and round_id=k.round_id and time<(k.time+:tradeWindowSeconds)) union select planted_by as player,round_id from rounds where planted_by is not null union select defused_by as player,round_id from rounds where defused_by is not null union select * from (select player,match_rounds.round_id from (select killer_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by killer_name,match_id union select victim_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by victim_name,match_id) as player_matches inner join (select rounds.round_id , match_id from rounds   ) as match_rounds on match_rounds.match_id=player_matches.match_id group by player,match_rounds.round_id) as pr where not exists (select victim_name from kills where pr.round_id=kills.round_id and victim_name=pr.player)) as kost_rounds inner join rounds on kost_rounds.round_id=rounds.round_id inner join matches on matches.match_id=rounds.match_id where matches.season=:season group by player 
totalKostRounds=select player,count(round_id) as value from (select killer_name as player,round_id from kills group by killer_name,round_id union select victim_name as player,round_id from kills k where exists (select victim_name from kills v where victim_name=k.killer_name and round_id=k.round_id and time<(k.time+:tradeWindowSeconds)) union select planted_by as player,round_id from rounds where planted_by is not null union select defused_by as player,round_id from rounds where defused_by is not null union select * from (select player,match_rounds.round_id from (select killer_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by killer_name,match_id union select victim_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by victim_name,match_id) as player_matches inner join (select rounds.round_id , match_id from rounds  ) as match_rounds on match_rounds.match_id=player_matches.match_id group by player,match_rounds.round_id) as pr where not exists (select victim_name from kills where pr.round_id=kills.round_id and victim_name=pr.player)) as kost_rounds group by player
seasonRoundsSurvived=select player,count(pr.round_id) as value from (select player,match_rounds.round_id from (select killer_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by killer_name,match_id union select victim_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by victim_name,match_id) as player_matches inner join (select rounds.round_id , match_id from rounds   ) as match_rounds on match_rounds.match_id=player_matches.match_id group by player,match_rounds.round_id) as pr inner join rounds on pr.round_id=rounds.round_id inner join matches on matches.match_id=rounds.match_id where matches.season=:season and not exists (select victim_name from kills where pr.round_id=kills.round_id and victim_name=pr.player) group by player
totalRoundsSurvived=select player,count(pr.round_id) as value from (select player,match_rounds.round_id from (select killer_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by killer_name,match_id union select victim_name as player,rounds.match_id from kills inner join rounds on kills.round_id=rounds.round_id group by victim_name,match_id) as player_matches inner join (select rounds.round_id , match_id from rounds   ) as match_rounds on match_rounds.match_id=player_matches.match_id group by player,match_rounds.round_id) as pr where not exists (select victim_name from kills where pr.round_id=kills.round_id and victim_name=pr.player) group by player
seasonRoundsPlanted=select planted_by as player,count(round_id) as value from rounds inner join matches on rounds.match_id=matches.match_id where matches.season=:season and planted_by is not null group by player
totalRoundsPlanted=select planted_by as player,count(round_id) as value from rounds where planted_by is not null group by player
seasonRoundsDefused=select defused_by as player,count(round_id) as value from rounds inner join matches on rounds.match_id=matches.match_id where matches.season=:season and defused_by is not null group by player
totalRoundsDefused=select defused_by as player,count(round_id) as value from rounds where defused_by is not null group by player
seasonOpeningKills=select count(killer_name) as value, killer_name as player from ( select killer_name,victim_name,kill_id,round_id from (select k.time as time,k.killer_name,k.victim_name,k.kill_id,k.round_id, k2.time as nulltime from kills k inner join rounds r on r.round_id=k.round_id inner join matches m on r.match_id=m.match_id left outer join kills k2 on k.round_id=k2.round_id and k2.time < k.time where m.season=:season) as okd where nulltime is null) as ok group by ok.killer_name
totalOpeningKills=select count(killer_name) as value, killer_name as player from ( select killer_name,victim_name,kill_id,round_id from (select k.time as time,k.killer_name,k.victim_name,k.kill_id,k.round_id, k2.time as nulltime from kills k left outer join kills k2 on k.round_id=k2.round_id and k2.time < k.time) as okd where nulltime is null) as ok group by ok.killer_name
seasonOpeningDeaths=select count(victim_name) as value, victim_name as player from ( select killer_name,victim_name,kill_id,round_id from (select k.time as time,k.killer_name,k.victim_name,k.kill_id,k.round_id, k2.time as nulltime from kills k inner join rounds r on r.round_id=k.round_id inner join matches m on r.match_id=m.match_id left outer join kills k2 on k.round_id=k2.round_id and k2.time < k.time where m.season=:season) as okd where nulltime is null) as ok group by ok.victim_name
totalOpeningDeaths=select count(victim_name) as value, victim_name as player from ( select killer_name,victim_name,kill_id,round_id from (select k.time as time,k.killer_name,k.victim_name,k.kill_id,k.round_id, k2.time as nulltime from kills k left outer join kills k2 on k.round_id=k2.round_id and k2.time < k.time) as okd where nulltime is null) as ok group by ok.victim_name
totalOneVxClutches=WITH cr as (select k.round_id, count(k.kill_id),r.match_id,m.h1,m.h2,m.h3,m.h4,m.h5 from kills k inner join rounds r on k.round_id=r.round_id inner join matches m on m.match_id=r.match_id where k.victim_name in (m.h1,m.h2,m.h3,m.h4,m.h5) and r.winner=m.home_team group by k.round_id,r.match_id,m.h1,m.h2,m.h3,m.h4,m.h5 having count(kill_id)=4),	\
cra as (select k.round_id, count(k.kill_id),r.match_id,m.a1,m.a2,m.a3,m.a4,m.a5 from kills k inner join rounds r on k.round_id=r.round_id inner join matches m on m.match_id=r.match_id where k.victim_name in (m.a1,m.a2,m.a3,m.a4,m.a5) and r.winner=m.away_team group by k.round_id,r.match_id,m.a1,m.a2,m.a3,m.a4,m.a5 having count(kill_id)=4)\
select player,count(round_id) as value from (select h1 as player,cr.round_id from cr left outer join kills k on cr.h1=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h2 as player,cr.round_id from cr left outer join kills k on cr.h2=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h3 as player,cr.round_id from cr left outer join kills k on cr.h3=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h4 as player,cr.round_id from cr left outer join kills k on cr.h4=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h5 as player,cr.round_id from cr left outer join kills k on cr.h5=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select a1 as player,cra.round_id from cra left outer join kills k on cra.a1=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a2 as player,cra.round_id from cra left outer join kills k on cra.a2=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a3 as player,cra.round_id from cra left outer join kills k on cra.a3=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a4 as player,cra.round_id from cra left outer join kills k on cra.a4=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a5 as player,cra.round_id from cra left outer join kills k on cra.a5=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
) as clutchedplayers group by player

seasonOneVxClutches=WITH cr as (select k.round_id, count(k.kill_id),r.match_id,m.h1,m.h2,m.h3,m.h4,m.h5 from kills k inner join rounds r on k.round_id=r.round_id inner join matches m on m.match_id=r.match_id where k.victim_name in (m.h1,m.h2,m.h3,m.h4,m.h5) and r.winner=m.home_team and m.season=:season group by k.round_id,r.match_id,m.h1,m.h2,m.h3,m.h4,m.h5 having count(kill_id)=4),	\
cra as (select k.round_id, count(k.kill_id),r.match_id,m.a1,m.a2,m.a3,m.a4,m.a5 from kills k inner join rounds r on k.round_id=r.round_id inner join matches m on m.match_id=r.match_id where k.victim_name in (m.a1,m.a2,m.a3,m.a4,m.a5) and r.winner=m.away_team and m.season=:season group by k.round_id,r.match_id,m.a1,m.a2,m.a3,m.a4,m.a5 having count(kill_id)=4)\
select player,count(round_id) as value from (select h1 as player,cr.round_id from cr left outer join kills k on cr.h1=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h2 as player,cr.round_id from cr left outer join kills k on cr.h2=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h3 as player,cr.round_id from cr left outer join kills k on cr.h3=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h4 as player,cr.round_id from cr left outer join kills k on cr.h4=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select h5 as player,cr.round_id from cr left outer join kills k on cr.h5=k.victim_name and cr.round_id=k.round_id where k.kill_id is null \
union \
select a1 as player,cra.round_id from cra left outer join kills k on cra.a1=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a2 as player,cra.round_id from cra left outer join kills k on cra.a2=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a3 as player,cra.round_id from cra left outer join kills k on cra.a3=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a4 as player,cra.round_id from cra left outer join kills k on cra.a4=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
union \
select a5 as player,cra.round_id from cra left outer join kills k on cra.a5=k.victim_name and cra.round_id=k.round_id where k.kill_id is null \
) as clutchedplayers group by player